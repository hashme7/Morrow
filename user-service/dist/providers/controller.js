"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.authControllerInstance = void 0;
const authController_1 = __importDefault(require("../adaptors/authController"));
const repository_1 = __importDefault(require("../infrastructure/repositories/repository"));
const useCases_1 = __importDefault(require("../use-cases/useCases"));
const send_verification_mail_1 = __importDefault(require("./send-verification-mail"));
const signupUsecase_1 = require("../use-cases/signupUsecase");
const jwt_1 = __importDefault(require("./jwt/jwt"));
const github_1 = require("./github/github");
const addToTeam_consumer_1 = require("../infrastructure/rabbitMQ/consumer/addToTeam.consumer");
const verifyOtpUsecase_1 = require("../use-cases/verifyOtpUsecase");
const loginUseCases_1 = require("../use-cases/loginUseCases");
const resendOtpUseCases_1 = require("../use-cases/resendOtpUseCases");
const updateFullNameUseCase_1 = require("../use-cases/updateFullNameUseCase");
const googleLoginUsecases_1 = require("../use-cases/googleLoginUsecases");
const githubLoginUseCases_1 = require("../use-cases/githubLoginUseCases");
const validateTokenUseCases_1 = require("../use-cases/validateTokenUseCases");
const createTeamUseCases_1 = require("../use-cases/createTeamUseCases");
//provider
const jwtInstance = new jwt_1.default();
const nodemailerInstance = new send_verification_mail_1.default();
const githubClient = new github_1.Github();
const repositoryInstance = new repository_1.default();
const SignupInstance = new signupUsecase_1.Signup(repositoryInstance, nodemailerInstance);
const VerifyOtpInstance = new verifyOtpUsecase_1.VerifyOtp(repositoryInstance);
const resendOtpInstance = new resendOtpUseCases_1.ResendOtp(repositoryInstance);
const loginInstance = new loginUseCases_1.Login(repositoryInstance);
const updateNameInstance = new updateFullNameUseCase_1.updateFullName(repositoryInstance);
const googleLoginInstance = new googleLoginUsecases_1.GoogleLogin(repositoryInstance);
const githubLoginInstance = new githubLoginUseCases_1.gitHubLogin(repositoryInstance, githubClient);
const validateTokenInstance = new validateTokenUseCases_1.ValidateToken();
const createTeamInstance = new createTeamUseCases_1.CreateTeam(repositoryInstance);
const useCasesInstance = new useCases_1.default(repositoryInstance, jwtInstance, githubClient);
new addToTeam_consumer_1.AddTeamConsumer(createTeamInstance);
exports.authControllerInstance = new authController_1.default(SignupInstance, VerifyOtpInstance, resendOtpInstance, loginInstance, updateNameInstance, googleLoginInstance, githubLoginInstance, validateTokenInstance);
