name: Deploy to Amazon ECS

on:
  push:
    branches: [ "deploy-br" ]
    paths: ["communication-service/**"]
   
env:
  AWS_REGION: eu-north-1                   # Set your preferred AWS region
  ECR_REPOSITORY: morrom/communication-service     # Set your Amazon ECR repository name
  ECS_SERVICE: communication-service-x86         # Set your Amazon ECS service name
  ECS_CLUSTER: morrow-prod                 # Set your Amazon ECS cluster name
  S3_BUCKET: morrow-json-storage           # Replace with your S3 bucket name
  S3_KEY: communication-service-x86.json         # Replace with your S3 object key
  CONTAINER_NAME: communication-service-x86      # Set the name of the container in the ECS task definition
 
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG communication-service/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Download ECS Task Definition from S3
      id: download-task-def
      run: |
        aws s3 cp s3://${{ env.S3_BUCKET }}/${{ env.S3_KEY }} ./task-definition.json
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ./task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
