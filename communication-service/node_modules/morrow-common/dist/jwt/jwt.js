"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JWTService = void 0;
const jsonwebtoken_1 = require("jsonwebtoken");
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config();
const secretKey = process.env.JWT_SECRET;
class JWTService {
    static createAccessToken(id, role) {
        try {
            if (!secretKey)
                throw new Error("No Secret Key for JSON WEB TOKEN");
            const payload = { id, role };
            return (0, jsonwebtoken_1.sign)(payload, secretKey, { expiresIn: "24h" });
        }
        catch (error) {
            console.log(error);
            return "error on create acess token";
        }
    }
    static createRefreshToken(id, role) {
        try {
            if (!secretKey)
                throw new Error("No Secret Key for JSON WEB TOKEN");
            const payload = { id, role };
            return (0, jsonwebtoken_1.sign)(payload, secretKey, { expiresIn: "7d" });
        }
        catch (error) {
            console.log(error);
            return "error on create refresh token";
        }
    }
    static verifyToken(token) {
        try {
            if (!secretKey)
                throw new Error("No Secret Key for JSON WEB TOKEN");
            return (0, jsonwebtoken_1.verify)(token, secretKey);
        }
        catch (error) {
            console.error("Invalid token error:", error);
            throw error;
        }
    }
}
exports.JWTService = JWTService;
