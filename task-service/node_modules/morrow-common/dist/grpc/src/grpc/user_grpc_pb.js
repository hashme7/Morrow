// GENERATED CODE -- DO NOT EDIT!

'use strict';
var grpc = require('grpc');
var src_grpc_user_pb = require('../../src/grpc/user_pb.js');

function serialize_TeamResponse(arg) {
  if (!(arg instanceof src_grpc_user_pb.TeamResponse)) {
    throw new Error('Expected argument of type TeamResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_TeamResponse(buffer_arg) {
  return src_grpc_user_pb.TeamResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_UserRequest(arg) {
  if (!(arg instanceof src_grpc_user_pb.UserRequest)) {
    throw new Error('Expected argument of type UserRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_UserRequest(buffer_arg) {
  return src_grpc_user_pb.UserRequest.deserializeBinary(new Uint8Array(buffer_arg));
}


var UserServiceService = exports.UserServiceService = {
  getTeamIds: {
    path: '/UserService/GetTeamIds',
    requestStream: false,
    responseStream: false,
    requestType: src_grpc_user_pb.UserRequest,
    responseType: src_grpc_user_pb.TeamResponse,
    requestSerialize: serialize_UserRequest,
    requestDeserialize: deserialize_UserRequest,
    responseSerialize: serialize_TeamResponse,
    responseDeserialize: deserialize_TeamResponse,
  },
};

exports.UserServiceClient = grpc.makeGenericClientConstructor(UserServiceService);
